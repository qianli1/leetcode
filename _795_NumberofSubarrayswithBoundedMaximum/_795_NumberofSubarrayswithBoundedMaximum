#include <vector>
#include <string>
#include <unordered_set>

using namespace std;
/**
* 本代码来自 CSON 官方视频课程，由 @CSON 提供
* 题目来源： http://leetcode.com
* CSON 致力于在 CS 领域内帮助中国人找到工作，让更多海内外国人受益
* 讲师： Edward Shi
* 官方网站： https://cspiration.com
* 版权归 CSON 所有， 禁止 转载！
*/

class _795_NumberofSubarrayswithBoundedMaximum {
    /**
    * 795. Number of Subarrays with Bounded Maximum
    * We are given an array A of positive integers, and two positive integers L and R (L <= R).

    Return the number of (contiguous, non-empty) subarrays such that the value of the maximum array element in that subarray is at least L and at most R.

    Example :
    Input: 
    A = [2, 1, 4, 3]
    L = 2
    R = 3
    Output: 3
    Explanation: There are three subarrays that meet the requirements: [2], [2, 1], [3].


    time : O(n);
    space : O(1);
    */
 public:
  int numSubarrayBoundedMax(vector<int>& A, int L, int R) {
    int res = 0;
    int left = -1, right = -1;
    
    for (int i = 0; i < A.size(); i++) {
        if (A[i] > R) {
            left = right = i;
            continue;
        }
        if (A[i] >= L) {
            right = i;
        }
        res += right - left;
    }
    return res;
  }
};
